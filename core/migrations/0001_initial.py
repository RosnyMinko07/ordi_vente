# Generated by Django 5.1.7 on 2025-04-21 00:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('icone', models.CharField(default='bi-laptop', max_length=50)),
                ('ordre', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
                'ordering': ['ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('vendeur', 'Vendeur'), ('acheteur', 'Acheteur')], default='acheteur', max_length=20)),
                ('est_actif', models.BooleanField(default=True)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('wallet_crypto', models.CharField(blank=True, max_length=100)),
                ('date_inscription', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=16, unique=True)),
                ('statut', models.CharField(choices=[('en_attente', 'En attente de paiement'), ('payee', 'Payée'), ('expediee', 'Expédiée'), ('annulee', 'Annulée'), ('remboursee', 'Remboursée')], default='en_attente', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_paiement', models.DateTimeField(blank=True, null=True)),
                ('mode_paiement', models.CharField(choices=[('crypto', 'Cryptomonnaie'), ('espece', 'Espèce')], default='crypto', max_length=20)),
                ('coinbase_id', models.CharField(blank=True, max_length=100)),
                ('utilisateur', models.ForeignKey(limit_choices_to={'role': 'acheteur'}, on_delete=django.db.models.deletion.PROTECT, related_name='commandes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JournalAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('date_action', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('prix', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('crypto_prices', models.JSONField(default=dict)),
                ('etat', models.CharField(choices=[('neuf', 'Neuf'), ('occasion', 'Occasion'), ('reconditionne', 'Reconditionné')], default='neuf', max_length=20)),
                ('stock', models.PositiveIntegerField(default=1)),
                ('image', models.ImageField(upload_to='produits/%Y/%m/')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='produits', to='core.categorie')),
                ('vendeur', models.ForeignKey(limit_choices_to={'role': 'vendeur'}, on_delete=django.db.models.deletion.CASCADE, related_name='produits_vendus', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LigneCommande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField()),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=12)),
                ('crypto_prices', models.JSONField(default=dict)),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.commande')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.produit')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionCrypto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crypto', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('USDC', 'USD Coin')], max_length=10)),
                ('montant', models.DecimalField(decimal_places=8, max_digits=20)),
                ('adresse_reception', models.CharField(max_length=100)),
                ('tx_hash', models.CharField(max_length=100)),
                ('date_confirmation', models.DateTimeField(blank=True, null=True)),
                ('confirmations', models.PositiveIntegerField(default=0)),
                ('commande', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='transaction_crypto', to='core.commande')),
            ],
        ),
        migrations.CreateModel(
            name='PanierItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField(default=1)),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(limit_choices_to={'role': 'acheteur'}, on_delete=django.db.models.deletion.CASCADE, related_name='panier', to=settings.AUTH_USER_MODEL)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.produit')),
            ],
            options={
                'unique_together': {('utilisateur', 'produit')},
            },
        ),
    ]
